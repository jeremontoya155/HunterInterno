<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Auditoría - Trackeo de Nichos</title>
    <!-- CSS Base, FontAwesome, Fonts -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/static/css/navbar.css">
    <link rel="stylesheet" href="/static/css/scrollbar.css">
    <!-- CSS específico (Opcional si usas <style>) -->
    <!-- <link rel="stylesheet" href="/static/css/auditoria_trackeo.css"> -->

    <style>
        /* =========================================== */
        /* ESTILOS "10/10" COMPLETOS Y ADAPTADOS       */
        /* =========================================== */
        :root { --color-background-dark: #0a0a10; --color-background-medium: #111827; --color-background-light: #1f2937; --color-accent: #4caf91; --color-accent-hover: #5cdb95; --color-text-primary: #e5e7eb; --color-text-secondary: #9ca3af; --color-highlight: var(--color-accent); --color-border: rgba(76, 175, 145, 0.25); /* Borde un poco más visible */ --color-danger: #f87171; --color-warning: #f39c12; --color-success: #6ee7b7; --font-primary: 'Poppins', sans-serif; --font-size-base: 16px; --line-height-base: 1.7; --spacing-unit: 1rem; --border-radius-small: 4px; --border-radius-medium: 8px; --border-radius-large: 16px; }
        body { font-family: var(--font-primary); background-color: var(--color-background-dark); color: var(--color-text-primary); line-height: var(--line-height-base); }
        body::-webkit-scrollbar { width: 8px; } body::-webkit-scrollbar-track { background: var(--color-background-medium); } body::-webkit-scrollbar-thumb { background-color: var(--color-accent); border-radius: 10px; border: 2px solid var(--color-background-medium); } body::-webkit-scrollbar-thumb:hover { background-color: var(--color-accent-hover); }

        /* --- Layout y Contenedores --- */
        @keyframes fadeInPage { from { opacity: 0; transform: translateY(15px); } to { opacity: 1; transform: translateY(0); } }
        .trackeo-page-container { width: 100%; min-height: calc(100vh - 60px); background: var(--color-background-dark) radial-gradient(ellipse at 70% 30%, rgba(76, 175, 145, 0.1), transparent 65%), radial-gradient(ellipse at 30% 80%, rgba(92, 219, 149, 0.06), transparent 70%); padding: calc(var(--spacing-unit) * 2.5 + 60px) calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 2); animation: fadeInPage 0.6s ease-out forwards; }
        .trackeo-content-wrapper { max-width: 1400px; /* Ancho generoso */ margin: 0 auto; display: flex; flex-direction: column; gap: calc(var(--spacing-unit) * 3); }
        .page-main-title { font-size: clamp(2rem, 5vw, 2.6rem); font-weight: 700; color: var(--color-text-primary); text-align: center; margin-bottom: calc(var(--spacing-unit) * 2); text-shadow: 0 3px 8px rgba(0, 0, 0, 0.6); letter-spacing: 0.5px; }
        .trackeo-section { background-color: var(--color-background-medium); background-image: linear-gradient(150deg, rgba(255,255,255,0.02), rgba(0,0,0,0.05)), url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%239ca3af' fill-opacity='0.02' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E"); border-radius: var(--border-radius-large); padding: 2rem 2.5rem; border: 1px solid var(--color-border); box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4), 0 3px 8px rgba(76, 175, 145, 0.1); position: relative; overflow: hidden; }
        .trackeo-section::before { content: ''; position: absolute; top: 0; left: 0; right: 0; height: 4px; background: linear-gradient(90deg, transparent, var(--color-accent), transparent); opacity: 0.5; }
        .section-header { display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 1rem; margin-bottom: 1.8rem; padding-bottom: 1.1rem; border-bottom: 1px solid var(--color-border); }
        .section-header h2 { font-size: 1.6rem; font-weight: 600; color: var(--color-accent-hover); margin: 0; display: flex; align-items: center; gap: 0.8rem; text-shadow: 0 1px 2px rgba(0,0,0,0.3); }
        .section-header h2 i { font-size: 1.1em; opacity: 0.9; color: var(--color-accent); }
        .section-header .header-actions { display: flex; gap: 0.8rem; align-items: center; flex-wrap: wrap; }

        /* --- Alertas --- */
        .alert { border-radius: var(--border-radius-medium); padding: 1rem 1.5rem; margin-bottom: 1.5rem; border: 1px solid transparent; font-size: 0.95rem; box-shadow: 0 4px 12px rgba(0,0,0,0.2); display: flex; align-items: center; gap: 1rem; } .alert::before { font-family: "Font Awesome 6 Free"; font-weight: 900; font-size: 1.2em; }
        .alert-success { color: #d1fae5; background-color: rgba(16, 185, 129, 0.2); border-color: rgba(16, 185, 129, 0.5); } .alert-success::before { content: "\f058"; color: #6ee7b7; }
        .alert-danger { color: #fee2e2; background-color: rgba(239, 68, 68, 0.15); border-color: rgba(239, 68, 68, 0.4); } .alert-danger::before { content: "\f071"; color: #f87171; }

        /* --- Botones --- */
        .btn { display: inline-flex; align-items:center; gap: 0.5rem; padding: 0.6rem 1.2rem; border:none; border-radius: var(--border-radius-medium); cursor:pointer; transition: all 0.3s ease; font-weight: 600; text-decoration: none;} .btn:disabled { opacity: 0.5; cursor: not-allowed;}
        .btn-primary { background: linear-gradient(145deg, var(--color-accent), var(--color-accent-hover)); color: var(--color-background-dark); } .btn-primary:hover:not(:disabled) { transform: translateY(-2px); box-shadow: 0 4px 10px rgba(76, 175, 145, 0.4);}
        .btn-secondary { background-color: var(--color-background-light); color: var(--color-text-secondary); border: 1px solid var(--color-border);} .btn-secondary:hover:not(:disabled){ background-color: var(--color-background-medium); color: var(--color-text-primary); }
        .btn-sm { padding: 0.4rem 0.8rem; font-size: 0.9rem;} .btn-success { background-color: var(--color-success); color: var(--color-background-dark);} .btn-warning{ background-color: var(--color-warning); color: var(--color-background-dark);} .btn-danger{ background-color: var(--color-danger); color: white; }

        /* --- Formulario Upload Inline --- */
        .upload-form-inline { display: flex; align-items: center; gap: 0.8rem; flex-grow: 1; max-width: 600px; }
        .upload-form-inline input[type="text"] { padding: 0.5rem 0.9rem; font-size: 0.9rem; background-color: rgba(0,0,0,0.2); border: 1px solid var(--color-border); border-radius: var(--border-radius-small); color: var(--color-text-primary); flex: 1 1 200px; transition: all 0.3s ease;}
        .upload-form-inline input[type="text"]:focus { background-color: rgba(0,0,0,0.3); border-color: var(--color-accent); box-shadow: 0 0 0 2px rgba(76, 175, 145, 0.2);}
        .upload-form-inline label.btn { padding: 0.5rem 0.9rem; margin: 0; white-space: nowrap; }
        .upload-form-inline input[type="file"] { display: none; }

        /* --- Filtro Manual --- */
        .manual-filter-container { margin-bottom: 1.5rem; display:flex; align-items: center; gap: 0.5rem; background-color: rgba(0,0,0,0.1); padding: 0.5rem 1rem; border-radius: var(--border-radius-medium);}
        .manual-filter-container label { margin-bottom: 0; color: var(--color-text-secondary); font-size: 0.9rem;}
        .manual-filter-container input[type="search"] { padding: 0.4rem 0.8rem; border-radius: var(--border-radius-small); border: 1px solid var(--color-border); background-color: rgba(0,0,0,0.2); color: var(--color-text-primary); flex-grow: 1; font-size: 0.95rem;}
        .manual-filter-container input[type="search"]::-webkit-search-cancel-button { appearance: none; }

        /* --- Tablas --- */
        .table-wrapper { overflow-x: auto; max-height: 60vh; border: 1px solid var(--color-border); border-radius: var(--border-radius-medium); }
        .history-table { width: 100%; border-collapse: collapse; font-size: 0.9rem; }
        .history-table thead { position: sticky; top: 0; z-index: 5; background-color: rgba(31, 41, 55, 0.9); backdrop-filter: blur(5px); -webkit-backdrop-filter: blur(5px); } /* color-background-light con alpha */
        .history-table th { padding: 0.9rem 1.1rem; text-align: left; font-weight: 600; color: var(--color-accent-hover); text-transform: uppercase; font-size: 0.75rem; letter-spacing: 0.5px; border-bottom: 2px solid var(--color-accent); white-space: nowrap; }
        .history-table tbody tr { border-bottom: 1px solid var(--color-border); transition: background-color 0.2s ease;}
        .history-table tbody tr:nth-child(even) { background-color: rgba(255, 255, 255, 0.015); }
        .history-table tbody tr:hover { background-color: rgba(76, 175, 145, 0.08); }
        .history-table td { padding: 0.75rem 1.1rem; vertical-align: middle; white-space: nowrap; color: var(--color-text-primary); }
        .history-table td.numeric { text-align: right; font-family: monospace; font-size: 0.95rem;}
        .history-table td:nth-child(5) { font-size: 0.85rem; color: var(--color-text-secondary); } /* Subido por / Agregado por */
        .history-table td:nth-child(6) { font-size: 0.85rem; color: var(--color-text-secondary); } /* Fecha / Acciones */
        .history-table td:nth-child(4) { font-size: 0.85rem; color: var(--color-text-secondary); } /* Tamaño / Estado */
        #manual-niche-table td:nth-child(1), #manual-niche-table td:nth-child(2) { font-weight: 500; }
        #manual-niche-table td.keyword-col { font-style: italic; color: var(--color-text-secondary); max-width: 250px; white-space: normal; word-break: break-word; }
        #manual-niche-table td.status-col select { padding: 0.2rem 0.5rem; font-size: 0.85rem; background-color: rgba(255,255,255,0.1); border: 1px solid var(--color-border); color: var(--color-text-primary); border-radius: var(--border-radius-small); cursor: pointer; appearance: none; background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%239ca3af' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3E%3C/svg%3E"); background-repeat: no-repeat; background-position: right 0.4rem center; background-size: 0.8em; padding-right: 1.5rem; }
        #manual-niche-table td.status-col select:focus { outline: none; border-color: var(--color-accent);}
        .action-buttons { text-align: right; white-space: nowrap; }
        .action-buttons .btn-action { display: inline-flex; align-items: center; justify-content: center; width: 32px; height: 32px; border-radius: 50%; color: var(--color-background-dark); font-size: 0.9rem; text-decoration: none; margin-left: 5px; border: none; cursor: pointer; transition: all 0.2s ease;}
        .btn-download { background-color: var(--color-success); color: var(--color-background-dark) !important;} .btn-download:hover { filter: brightness(1.1); transform: scale(1.1);}
        .btn-delete { background-color: var(--color-danger); color: white !important;} .btn-delete:hover { filter: brightness(1.1); transform: scale(1.1);}
        .no-data-row td { text-align: center; padding: 1.5rem; color: var(--color-text-secondary); font-style: italic; }

        /* --- Modales --- */
        .manual-modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.75); backdrop-filter: blur(5px); display: none; justify-content: center; align-items: center; z-index: 1050; opacity: 0; transition: opacity 0.3s ease;}
        .manual-modal-overlay.active { display: flex; opacity: 1; }
        .manual-modal-content { background: var(--color-background-light); border-radius: var(--border-radius-large); width: 90%; max-width: 600px; box-shadow: 0 10px 30px rgba(0,0,0,0.5); display: flex; flex-direction: column; overflow: hidden; transform: scale(0.95); transition: transform 0.3s ease; max-height: 90vh;}
        .manual-modal-overlay.active .manual-modal-content { transform: scale(1); }
        .manual-modal-header { padding: 1.2rem 1.5rem; background-color: rgba(0,0,0,0.2); display: flex; justify-content: space-between; align-items: center; border-bottom: 1px solid var(--color-border); }
        .manual-modal-title { font-size: 1.3rem; color: var(--color-text-primary); margin: 0; font-weight: 600; }
        .modal-close-btn { background: none; border: none; color: var(--color-text-secondary); font-size: 1.8rem; cursor: pointer; padding: 0; line-height: 1; } .modal-close-btn:hover{ color: var(--color-accent-hover); }
        .manual-modal-body { padding: 1.5rem 2rem; overflow-y: auto; }
        .manual-modal-body .form-group { margin-bottom: 1.2rem; }
        .manual-modal-body label { display: block; font-weight: 500; color: var(--color-text-secondary); margin-bottom: 0.5rem; font-size: 0.9rem;}
        .manual-modal-body input[type="text"], .manual-modal-body textarea { width: 100%; padding: 0.8rem 1rem; background-color: rgba(0, 0, 0, 0.25); border: 1px solid var(--color-border); border-radius: var(--border-radius-medium); color: var(--color-text-primary); font-size: 1rem; }
        .manual-modal-body input:focus, .manual-modal-body textarea:focus { outline: none; border-color: var(--color-accent); box-shadow: 0 0 0 3px rgba(76, 175, 145, 0.3); }
        .manual-modal-body textarea { resize: vertical; min-height: 60px; }
        .manual-modal-footer { padding: 1rem 1.5rem; background-color: rgba(0,0,0,0.1); border-top: 1px solid var(--color-border); display: flex; justify-content: flex-end; gap: 1rem; }
        /* Modal Bulk Add */
        #bulkManualAddModalOverlay .manual-modal-content { max-width: 700px; }
        #bulk-textarea { min-height: 200px; font-family: monospace; font-size: 0.9rem; white-space: pre; }
        #bulk-add-feedback { margin-top: 1rem; font-size: 0.9rem; padding: 0.5rem; border-radius: var(--border-radius-small); } #bulk-add-feedback.error { color: var(--color-danger); background-color: rgba(239, 68, 68, 0.1); border: 1px solid rgba(239, 68, 68, 0.3);} #bulk-add-feedback.success { color: var(--color-success); background-color: rgba(16, 185, 129, 0.1); border: 1px solid rgba(16, 185, 129, 0.3);} #bulk-add-feedback.warning { color: var(--color-warning); background-color: rgba(243, 156, 18, 0.1); border: 1px solid rgba(243, 156, 18, 0.3);}
        #bulk-errors-list { margin-top: 0.5rem; padding-left: 1.5rem; font-size: 0.85rem; color: var(--color-warning); max-height: 150px; overflow-y: auto; list-style: disc; }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>

    <div class="trackeo-page-container">
        <div class="trackeo-content-wrapper">
            <h1 class="page-main-title">Trackeo de Nichos</h1>

            <!-- Mensajes Flash -->
            <% if (locals.success_msg) { %><div class="alert alert-success" role="alert"><%= success_msg %></div><% } %>
            <% if (locals.error_msg) { %><div class="alert alert-danger" role="alert"><%= error_msg %></div><% } %>

            <!-- Sección Seguimiento Manual -->
            <section id="manual-tracking-section" class="trackeo-section card-style">
                <div class="section-header">
                    <h2><i class="fas fa-pencil-alt icon-header"></i> Seguimiento Manual</h2>
                    <div class="header-actions">
                        <button class="btn btn-secondary btn-sm" onclick="openBulkManualAddModal()" title="Agregar múltiples entradas desde texto"> <i class="fas fa-list-ol"></i> Lote </button>
                        <button class="btn btn-primary btn-sm" onclick="openManualNicheModal()" title="Agregar una entrada"> <i class="fas fa-plus"></i> Agregar </button>
                    </div>
                </div>
                 <div class="manual-filter-container">
                     <label for="manual-search"><i class="fas fa-filter"></i> Filtrar:</label>
                     <input type="search" id="manual-search" placeholder="Buscar por cuenta a usar, trackear, tipo, estado...">
                 </div>
                <div class="table-wrapper custom-scrollbar">
                    <table id="manual-niche-table" class="history-table">
                        <thead>
                            <tr> <th>Cuenta a Usar</th> <th>Cuenta a Trackear</th> <th>Tipo/Keyword</th> <th>Estado</th> <th>Agregado por</th> <th>Fecha</th> <th>Acciones</th> </tr>
                        </thead>
                        <tbody>
                            <% if (locals.manualNiches && manualNiches.length > 0) { %>
                                <% manualNiches.forEach(niche => { %>
                                    <!-- data-search-terms incluye todos los campos visibles para el filtro -->
                                    <tr id="manual-niche-<%= niche.id %>" data-search-terms="<%= niche.cuenta_a_usar.toLowerCase() %> <%= niche.cuenta_a_trackear.toLowerCase() %> <%= niche.tipo_palabra_clave.toLowerCase() %> <%= niche.estado.toLowerCase() %> <%= niche.added_by_username?.toLowerCase() || '' %>">
                                        <td><%= niche.cuenta_a_usar %></td>
                                        <td><%= niche.cuenta_a_trackear %></td>
                                        <td class="keyword-col"><%= niche.tipo_palabra_clave %></td>
                                        <td class="status-col">
                                            <select class="manual-niche-status" data-id="<%= niche.id %>" title="Cambiar estado">
                                                <option value="activo" <%= niche.estado === 'activo' ? 'selected' : '' %>>Activo</option>
                                                <option value="pausado" <%= niche.estado === 'pausado' ? 'selected' : '' %>>Pausado</option>
                                                <option value="finalizado" <%= niche.estado === 'finalizado' ? 'selected' : '' %>>Finalizado</option>
                                            </select>
                                        </td>
                                        <td><%= niche.added_by_username || 'Desconocido' %></td>
                                        <td><%= new Date(niche.created_at).toLocaleDateString('es-ES', {day:'2-digit', month:'2-digit', year:'numeric'}) %></td>
                                        <td class="action-buttons">
                                             <!-- Botón Borrar Manual (asegúrate que el JS lo maneje) -->
                                             <button class="btn-action btn-delete manual-delete-btn" data-id="<%= niche.id %>" title="Eliminar Entrada Manual" data-tooltip="Eliminar Manual"><i class="fas fa-trash-alt"></i></button>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr class="no-data-row"> <td colspan="7">No hay seguimientos manuales.</td> </tr>
                            <% } %>
                             <tr id="manual-no-results-row" class="no-data-row" style="display: none;"><td colspan="7">No se encontraron seguimientos.</td></tr>
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Sección Uploads CSV -->
            <section id="csv-upload-section" class="trackeo-section card-style">
                 <div class="section-header">
                    <h2><i class="fas fa-file-csv icon-header"></i> Archivos CSV Subidos</h2>
                     <form action="/auditoria/trackeo" method="POST" enctype="multipart/form-data" class="upload-form-inline">
                         <input type="text" name="tipo_nicho" placeholder="Tipo/Nicho del CSV*" required title="Describe el contenido del CSV">
                         <label for="csvFile" class="btn btn-secondary btn-sm" title="Seleccionar .csv"> <i class="fas fa-paperclip"></i> Seleccionar* <input type="file" id="csvFile" name="csvFile" accept=".csv, text/csv" required style="display: none;"> </label>
                         <button type="submit" class="btn btn-primary btn-sm"><i class="fas fa-upload"></i> Subir</button>
                     </form>
                 </div>
                <% if (locals.uploads && uploads.length > 0) { %>
                    <div class="table-wrapper custom-scrollbar">
                        <table id="csv-history-table" class="history-table">
                            <thead> <tr> <th>Fecha Subida</th> <th>Tipo Nicho</th> <th>Nombre Original</th> <th class="numeric">Tamaño</th> <th>Subido por</th> <th class="action-buttons">Acciones</th> </tr> </thead>
                            <tbody> <!-- ID añadido para el selector JS -->
                                <% uploads.forEach(upload => { %>
                                    <% let fileSizeFormatted; if (upload.size < 1024) fileSizeFormatted = upload.size + ' B'; else if (upload.size < 1024*1024) fileSizeFormatted = (upload.size / 1024).toFixed(1) + ' KB'; else fileSizeFormatted = (upload.size / (1024 * 1024)).toFixed(2) + ' MB'; %>
                                    <tr id="upload-row-<%= upload.id %>">
                                        <td><%= new Date(upload.uploaded_at).toLocaleString('es-ES', { dateStyle: 'short', timeStyle: 'short' }) %></td>
                                        <td><%= upload.tipo_nicho %></td>
                                        <td title="<%= upload.original_filename %>"><%= upload.original_filename.length > 35 ? upload.original_filename.substring(0, 32) + '...' : upload.original_filename %></td>
                                        <td class="numeric"><%= fileSizeFormatted %></td>
                                        <td><%= upload.uploaded_by_username || 'Desconocido' %></td>
                                        <td class="action-buttons">
                                            <a href="/auditoria/trackeo/download/<%= upload.id %>" class="btn-action btn-download" title="Descargar" data-tooltip="Descargar"><i class="fas fa-download"></i></a>
                                            <button class="btn-action btn-delete csv-delete-btn" data-id="<%= upload.id %>" data-filename="<%= upload.original_filename %>" title="Eliminar CSV y Registro" data-tooltip="Borrar CSV"><i class="fas fa-trash-alt"></i></button>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                <% } else { %> <p class="no-data-message" style="text-align: center; margin-top: 1rem;">No hay archivos CSV subidos.</p> <% } %>
            </section>
        </div>
    </div>

    <!-- Modales -->
    <div id="manualNicheModalOverlay" class="manual-modal-overlay"> <div class="manual-modal-content"> <div class="manual-modal-header"> <h5 class="manual-modal-title">Agregar Seguimiento Manual</h5> <button type="button" class="modal-close-btn" onclick="closeManualNicheModal()">×</button> </div> <form action="/auditoria/manual-tracking" method="POST" id="manual-niche-form"> <div class="manual-modal-body"> <div class="form-group"> <label for="mn_cuenta_trackear">Cuenta a Trackear*</label> <input type="text" id="mn_cuenta_trackear" name="cuenta_a_trackear" required placeholder="ej: @usuarioObjetivo"> </div> <div class="form-group"> <label for="mn_cuenta_usar">Cuenta a Usar*</label> <input type="text" id="mn_cuenta_usar" name="cuenta_a_usar" required placeholder="ej: @nuestraCuenta"> </div> <div class="form-group"> <label for="mn_tipo_keyword">Tipo / Palabra Clave*</label> <input type="text" id="mn_tipo_keyword" name="tipo_palabra_clave" required placeholder="ej: Competencia, Potencial"> </div> <div class="form-group"> <label for="mn_notas">Notas (Opcional)</label> <textarea id="mn_notas" name="notas_manual" rows="2"></textarea> </div> </div> <div class="manual-modal-footer"> <button type="button" class="btn btn-secondary btn-sm" onclick="closeManualNicheModal()">Cancelar</button> <button type="submit" class="btn btn-primary btn-sm"><i class="fas fa-plus-circle"></i> Agregar</button> </div> </form> </div> </div>
    <div id="bulkManualAddModalOverlay" class="manual-modal-overlay"> <div class="manual-modal-content"> <div class="manual-modal-header"> <h5 class="manual-modal-title">Agregar Seguimientos en Lote</h5> <button type="button" class="modal-close-btn" onclick="closeBulkManualAddModal()">×</button> </div> <form id="bulk-manual-add-form"> <div class="manual-modal-body">
        <!-- Texto Modal Lote Corregido -->
        <p><small>Pega aquí las entradas, una por línea, separadas por coma (,).</small><br>
           <strong>Formato:</strong> <code>cuenta_a_usar, cuenta_a_trackear, tipo/palabra_clave</code><br>
           <em>(Cuenta que contacta, Cuenta objetivo, Descripción)</em>
        </p>
        <div class="form-group"> <label for="bulk-textarea">Entradas:</label> <textarea id="bulk-textarea" name="bulkData" rows="10" placeholder="Ejemplo:
@nuestra_cuenta1, @competidor1, Competencia Fuerte
@nuestra_cuenta1, @lead_interesante, Lead Caliente - Enviar Promo X
@nuestra_cuenta2, @otro_perfil, Interés Viajes - Baja Interacción" required></textarea> </div>
        <div id="bulk-add-feedback" class="feedback-message alert" style="display: none;"></div> <ul id="bulk-errors-list" style="margin-top: 0.5rem;"></ul>
    </div> <div class="manual-modal-footer"> <button type="button" class="btn btn-secondary btn-sm" onclick="closeBulkManualAddModal()">Cancelar</button> <button type="submit" class="btn btn-primary btn-sm"><i class="fas fa-check-double"></i> Agregar Lote</button> </div> </form> </div> </div>

    <!-- Scripts -->
    <script defer src="/static/js/navbar.js"></script>
    <!-- JS específico para esta página -->
    <script>
        // =============================================
        // JS Incrustado para Trackeo (Corregido)
        // =============================================
        document.addEventListener('DOMContentLoaded', () => {
            console.log("Auditoría Trackeo Manager JS Cargado.");

            // Referencias DOM
            const manualModalOverlay = document.getElementById('manualNicheModalOverlay');
            const manualNicheForm = document.getElementById('manual-niche-form');
            const bulkManualAddModalOverlay = document.getElementById('bulkManualAddModalOverlay');
            const bulkManualAddForm = document.getElementById('bulk-manual-add-form');
            const bulkTextarea = document.getElementById('bulk-textarea');
            const bulkFeedback = document.getElementById('bulk-add-feedback');
            const bulkErrorsList = document.getElementById('bulk-errors-list');
            const manualSearchInput = document.getElementById('manual-search');
            const manualTableBody = document.getElementById('manual-niche-table')?.querySelector('tbody');
            const manualNoResultsRow = document.getElementById('manual-no-results-row');
            // CORRECCIÓN: Selector específico para el tbody de la tabla CSV
            const csvTableBody = document.getElementById('csv-history-table')?.querySelector('tbody');

            // Funciones Auxiliares Modales y Feedback
            const showModal = (overlay) => { if (overlay) { overlay.style.display = 'flex'; requestAnimationFrame(() => overlay.classList.add('active')); } };
            const hideModal = (overlay) => { if (overlay) { overlay.classList.remove('active'); overlay.addEventListener('transitionend', () => { if (!overlay.classList.contains('active')) overlay.style.display = 'none'; }, { once: true }); } };
            const showFeedback = (el, msg, type='info') => { if(el) { el.textContent = msg; el.className = `feedback-message alert alert-${type}`; el.style.display = 'block';}};
            const hideFeedback = (el) => { if(el) { el.textContent = ''; el.style.display = 'none';}};

            // Abrir/Cerrar Modales
            window.openManualNicheModal = () => { if (manualNicheForm) manualNicheForm.reset(); showModal(manualModalOverlay); };
            window.closeManualNicheModal = () => hideModal(manualModalOverlay);
            window.openBulkManualAddModal = () => { if(bulkManualAddForm) bulkManualAddForm.reset(); if(bulkFeedback) hideFeedback(bulkFeedback); if(bulkErrorsList) bulkErrorsList.innerHTML = ''; showModal(bulkManualAddModalOverlay); };
            window.closeBulkManualAddModal = () => hideModal(bulkManualAddModalOverlay);
            [manualModalOverlay, bulkManualAddModalOverlay].forEach(overlay => { if(overlay) overlay.addEventListener('click', (e) => { if (e.target === overlay) hideModal(overlay); }); });
            document.addEventListener('keydown', (event) => { if (event.key === "Escape") { if (manualModalOverlay?.classList.contains('active')) closeManualNicheModal(); if (bulkManualAddModalOverlay?.classList.contains('active')) closeBulkManualAddModal(); }});

            // Filtro Tabla Manual
            if (manualSearchInput && manualTableBody) {
                manualSearchInput.addEventListener('input', () => {
                    const searchTerm = manualSearchInput.value.toLowerCase().trim();
                    const rows = manualTableBody.querySelectorAll('tr:not(.no-data-row)');
                    let visibleCount = 0;
                    rows.forEach(row => {
                        const searchTerms = row.dataset.searchTerms || '';
                        const isVisible = !searchTerm || searchTerms.includes(searchTerm);
                        row.style.display = isVisible ? '' : 'none';
                        if (isVisible) visibleCount++;
                    });
                    if (manualNoResultsRow) manualNoResultsRow.style.display = (visibleCount === 0 && rows.length > 0) ? 'table-row' : 'none';
                });
            }

            // Editar Estado Manual (AJAX)
            if (manualTableBody) {
                manualTableBody.addEventListener('change', async (event) => {
                    const target = event.target;
                    if (target.classList.contains('manual-niche-status')) {
                        const id = target.dataset.id; const nuevoEstado = target.value; const selectElement = target;
                        console.log(`Cambiando estado ID ${id} a ${nuevoEstado}`); selectElement.disabled = true; let valorOriginal = ''; // Para revertir
                        // Encontrar el estado anterior
                        Array.from(target.options).forEach(opt => { if(!opt.selected && opt.defaultSelected) valorOriginal = opt.value;}); // No siempre funciona bien
                        try {
                            const response = await fetch(`/api/manual-tracking/${id}/estado`, { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ estado: nuevoEstado }) });
                            const result = await response.json(); if (!response.ok || !result.success) throw new Error(result.message || `Error ${response.status}`);
                            console.log(`Estado actualizado ID ${id}`); const statusCell = target.closest('td'); if(statusCell) { /* Actualizar clase si es necesario */ }
                            showFlashMessageInPage('Estado actualizado.', 'success'); // Mostrar feedback
                        } catch (error) { console.error(`Error actualizando estado ID ${id}:`, error); alert(`Error al actualizar: ${error.message}`); target.value = valorOriginal || target.options[0].value; /* Revertir simple */ }
                        finally { selectElement.disabled = false; }
                    }
                });
                // Listener para borrado manual (si añades el botón .manual-delete-btn)
                manualTableBody.addEventListener('click', async (event) => {
                    const deleteButton = event.target.closest('.manual-delete-btn');
                     if (deleteButton) {
                         event.preventDefault(); const nicheId = deleteButton.dataset.id;
                         if (confirm(`¿Eliminar esta entrada manual (ID: ${nicheId})?`)) {
                             deleteButton.disabled = true; deleteButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                             try {
                                 // const response = await fetch(`/api/manual-tracking/${nicheId}`, { method: 'DELETE' }); // Endpoint futuro
                                 // const result = await response.json(); if (!response.ok || !result.success) throw new Error(result.message);
                                 alert("Funcionalidad de borrado manual aún no implementada en API."); // Placeholder
                                 // const row = document.getElementById(`manual-niche-${nicheId}`); if (row) row.remove();
                                 // showFlashMessageInPage('Entrada manual eliminada.', 'success');
                             } catch (error) { console.error(`Error eliminando manual ${nicheId}:`, error); alert(`Error: ${error.message}`); }
                             finally { deleteButton.disabled = false; deleteButton.innerHTML = '<i class="fas fa-trash-alt"></i>'; }
                         }
                     }
                });
            }

             // Borrar CSV (AJAX) - CORREGIDO: Añadido listener al tbody correcto
             if (csvTableBody) {
                 console.log("Añadiendo listener BORRAR CSV a:", csvTableBody);
                 csvTableBody.addEventListener('click', async (event) => {
                     const deleteButton = event.target.closest('.csv-delete-btn');
                     if (deleteButton) {
                         event.preventDefault(); const uploadId = deleteButton.dataset.id; const filename = deleteButton.dataset.filename || 'este archivo';
                         console.log(`Click en borrar CSV ID: ${uploadId}`);
                         if (confirm(`¿Eliminar registro y archivo "${filename}"? NO se puede deshacer.`)) {
                            deleteButton.disabled = true; deleteButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                             try {
                                 const response = await fetch(`/api/auditoria/trackeo/uploads/${uploadId}`, { method: 'DELETE' });
                                 // Asume que el backend devuelve JSON incluso en error
                                 const result = await response.json().catch(() => ({success: false, message: `Respuesta no válida del servidor (${response.status})`})); // Fallback si no es JSON

                                 if (!response.ok || !result.success) { throw new Error(result.message || `Error ${response.status}`); }

                                 console.log(`CSV Upload ${uploadId} eliminado.`); const row = document.getElementById(`upload-row-${uploadId}`); if (row) row.remove();
                                 showFlashMessageInPage(result.message || 'Archivo CSV eliminado.', 'success'); // Usa mensaje de API si existe
                             } catch (error) { console.error(`Error eliminando CSV ${uploadId}:`, error); alert(`Error al eliminar: ${error.message}`); deleteButton.disabled = false; deleteButton.innerHTML = '<i class="fas fa-trash-alt"></i>'; }
                         }
                     }
                 });
             } else { console.warn("No se encontró 'csvTableBody'. El borrado de CSV no funcionará."); }

             // Agregar en Lote (AJAX)
             if (bulkManualAddForm) {
                 bulkManualAddForm.addEventListener('submit', async (event) => {
                     event.preventDefault(); const bulkData = bulkTextarea.value; const submitButton = bulkManualAddForm.querySelector('button[type="submit"]');
                     if (!bulkData.trim()) { showFeedback(bulkFeedback, "El área de texto está vacía.", "error"); return; }
                     submitButton.disabled = true; submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Agregando...'; hideFeedback(bulkFeedback); if(bulkErrorsList) bulkErrorsList.innerHTML = '';
                     try {
                        const response = await fetch('/api/manual-tracking/bulk', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ bulkData: bulkData }) });
                        const result = await response.json(); if (!response.ok && response.status !== 207) throw new Error(result.message || `Error ${response.status}`); // Permitir 207
                        showFeedback(bulkFeedback, result.message || 'Proceso completado.', result.errors ? 'warning' : 'success');
                        if (result.errors && result.errors.length > 0 && bulkErrorsList) { bulkErrorsList.innerHTML = '<strong>Líneas con formato incorrecto (ignoradas):</strong>'; result.errors.forEach(err => { const li = document.createElement('li'); li.textContent = err; bulkErrorsList.appendChild(li); }); }
                         // Recargar siempre para ver los cambios, ajustar delay si hay errores
                         setTimeout(() => { location.reload(); }, result.errors ? 5000 : 1500);
                     } catch(error) { console.error("Error agregando en lote:", error); showFeedback(bulkFeedback, `Error: ${error.message}`, 'error'); }
                      finally { submitButton.disabled = false; submitButton.innerHTML = '<i class="fas fa-check-double"></i> Agregar Lote'; }
                 });
             }

            // Función para mostrar mensajes tipo flash
            function showFlashMessageInPage(message, type = 'success') {
                const container = document.querySelector('.trackeo-content-wrapper'); if (!container) return;
                const existingAlert = container.querySelector('.dynamic-alert'); if(existingAlert) existingAlert.remove();
                const alertDiv = document.createElement('div'); alertDiv.className = `alert alert-${type} dynamic-alert`; alertDiv.textContent = message; alertDiv.style.marginTop = '1rem'; container.insertBefore(alertDiv, container.firstChild);
                setTimeout(() => { alertDiv.style.transition = 'opacity 0.5s ease'; alertDiv.style.opacity = '0'; setTimeout(() => alertDiv.remove(), 500); }, 3500); // Duración un poco más larga
            }

            console.log("Auditoría Trackeo Manager inicializado.");
        }); // Fin DOMContentLoaded
    </script>

</body>
</html>